{"version":3,"sources":["components/Card.module.css","App.module.css","components/SearchBar.module.css","components/Temp.module.css","components/Cards.module.css","components/Temp.jsx","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","App.js","index.js"],"names":["module","exports","Temp","label","value","className","styles","join","Card","max","min","name","img","onClose","main","MainCard","Name","onClick","Button","src","alt","Cards","cities","map","city","id","SearchBar","onSearch","searchBar","onSubmit","e","preventDefault","input","document","getElementById","icon","placeholder","submit","type","App","React","useState","setCities","Header","ciudad","fetch","process","then","r","json","recurso","undefined","Math","round","temp_min","temp_max","weather","wind","speed","temp","clouds","all","latitud","coord","lat","longitud","lon","find","c","oldCities","alert","Main","MainCity","length","ReelCities","filter","ReactDOM","render"],"mappings":"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","file":"static/js/main.65503058.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__3VO0O\",\"Button\":\"Card_Button__1mvjh\",\"Name\":\"Card_Name__1kVuC\",\"MainCard\":\"Card_MainCard__2NZMF\",\"Temp\":\"Card_Temp__1S6Fk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-UZz\",\"Header\":\"App_Header___WTG1\",\"Main\":\"App_Main__5C9D8\",\"MainCity\":\"App_MainCity__3FZ6s\",\"ReelCities\":\"App_ReelCities__3GUFp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__1o7uF\",\"input\":\"SearchBar_input__3ZbXe\",\"submit\":\"SearchBar_submit__2qDm7\",\"icon\":\"SearchBar_icon__3r8PY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Temp\":\"Temp_Temp__J7fiD\",\"label\":\"Temp_label__1aiT8\",\"value\":\"Temp_value__1S-T9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cards\":\"Cards_Cards__3Lqxi\"};","import React from 'react'\r\nimport styles from './Temp.module.css'\r\n\r\n//Creado con React Snipets extension poniendo rfc\r\n\r\nexport default function Temp({label, value, className}) {\r\n  return (\r\n    // componente Temp recibe como propiedad className y la usa aqui\r\n    <div className={[styles.Temp, className].join(' ')}>\r\n        <span className={styles.label}>{label}</span>\r\n        <span className={styles.value}>{value}</span>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport Temp from './Temp.jsx';\nimport styles from './Card.module.css'\n\n// agrego main como parametro que se le pasa a la funcion\nexport default function Card({max, min , name, img, onClose, main}) { \n  // acá va tu código\n  return (\n    // si la Card es main (ppal.) aplico MainCard, sino vacio, uno el resultado con join\n   <div className={[styles.Card, main ? styles.MainCard : ''].join(' ')}>\n    <span className={styles.Name}>{name}</span>\n    <button onClick={onClose} className={styles.Button}>x</button>\n    <section>\n      <Temp className={styles.Temp} label=\"Min\" value={min} />\n      <Temp className={styles.Temp} label=\"Max\" value={max} />\n      {/* si es main aplico tamaño 4, sino 2 */}\n      <img src={`http://openweathermap.org/img/wn/${img}@${main ? 4 : 2 }x.png`} alt=\"icono\" />\n    </section>\n  </div>\n  );\n};","import React from 'react';\nimport Card from './Card';\nimport styles from './Cards.module.css'\n\nexport default function Cards({ cities, onClose }) {\n  // acá va tu código\n  // tip, podés usar un map\n  return (\n  <div className={styles.Cards}>\n    {/* por cada ciudad se le pasa la funcion Card */}\n    {cities.map((city) =>(\n    <Card\n      key={city.id}\n      max={city.max}\n      min={city.min}\n      name={city.name}\n      img={city.img}\n      onClose={() => onClose(city.id)}\n    />\n    ))}\n  </div>\n  );\n};","// import React from 'react';\n// import styles from './SearchBar.module.css'\n\n// export default function SearchBar(props) {\n//   // acá va tu código\n//   // inserta un formulario\n//   return <form>\n//     <input placeholder=\"Ciudad...\" />\n//     <input type=\"submit\" value=\"Agregar\" />\n//   </form>\n// };\n\nimport React from 'react';\n// traemos los iconos, la carpeta son las primeras 2 letras\n// para instalar npm i react-icons\nimport {BiSearchAlt, BiMapPin} from 'react-icons/bi'\nimport styles from './SearchBar.module.css';\n\nexport default function SearchBar({ onSearch }) {\n  return (\n    //  traigo de modulo SearchBar, y en submit quiero que se utilice on Search \n    <form className={styles.searchBar} onSubmit ={(e)=>{\n      e.preventDefault();\n\n      const input = document.getElementById('cityInput');\n      // para pasar el valur que se cargo en el navbar\n      onSearch(input.value);\n      input.value ='';\n    }}>\n        <BiMapPin className={styles.icon}/>\n        <input id='cityInput' className={styles.input} placeholder='Ciudad...' />\n        <button className={styles.submit} type='submit'>\n          <BiSearchAlt />\n        </button>\n    </form>        \n    )\n}","import React from 'react';\nimport Card from './components/Card.jsx';\nimport Cards from './components/Cards.jsx';\nimport SearchBar from './components/SearchBar.jsx';\n\nimport styles from './App.module.css';\n\n\n// si quiero que esto este guardado en una variable de entorno p/no compartir clave\nconst apiKey = process.env.REACT_APP_APIKEY;\n\n\nfunction App() {\n  // devuelve un estado que viene como un array, el estado primero y la funcion que la seteea segundo. Arranca como array vacio\n  const [cities, setCities] = React.useState([]);\n\n  function onSearch(ciudad) {\n    // recibe ciudad, metodo fetch sirve para solicitar info desde backend, devuelve una promesa\n    // para hacer deploy en vercel por ejemplo poner https, no http, porque toma solo desde sitios seguros\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`)\n      .then(r => r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          // vamos construyendo con los datos de la ciudad solicitada al backend\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          };\n\n          // si la existe la ciudad no quiero agregarla\n          const exist = cities.find(c => c.id === ciudad.id)\n\n          if (!exist) {\n            // setea un estado, funcion que le pasas el estado previo, retorna concatenando con ciudad \n            setCities(oldCities => [...oldCities, ciudad]);\n          }\n        }\n        else {\n          alert(\"Ciudad no encontrada\");\n        }\n      }\n      );\n  }\n\n  // filtra los que no tengan ids iguales al que se pasan, devuelve un array con esos elementos\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  return (\n    <div className={styles.App}>\n      <header className={styles.Header}>\n        <SearchBar\n          onSearch={(ciudad) => onSearch(ciudad)}\n        />\n      </header>\n      <main className={styles.Main}>\n        <section className={styles.MainCity}>\n          {/* si quisiera poner que figure la ultima ciudad al lado izquierdo */}\n          {cities.length ? (\n            <Card\n              max={cities[cities.length - 1].max}\n              min={cities[cities.length - 1].min}\n              name={cities[cities.length - 1].name}\n              img={cities[cities.length - 1].img}\n\n              // le digo a esta que es la Card ppal p/q' me pase otro estilo\n              main={true}\n            />) : (<span>No hay ciudades</span>)}\n        </section>\n        <section className={styles.ReelCities}>\n          {/* pasa como props a Cards las ciudades en data.js  */}\n          <Cards cities={cities} onClose={onClose} />\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />,\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}